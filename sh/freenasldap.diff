--- /usr/local/www/freenasUI/common/freenasldap.py	2019-04-02 09:22:39.797203000 -0400
+++ /root/freenasldap.py.new	2019-04-01 15:15:15.507263000 -0400
@@ -3099,10 +3099,32 @@
         self.basedn = self.get_baseDN()
         self.attributes = ['sAMAccountName']
 
-        # Redmine 63414
+        # Redmine 63414 and 76000
+        """
+           "use default domain = False":
+           Local               Domain               External Domain
+           GROUP               DOMAIN\\GROUP        TRUSTED\\GROUP
+
+           "use default domain = True":
+           GROUP               GROUP                TRUSTED\\GROUP
+
+           @param(in) GROUP: <GROUP>
+           @param(in) netbiosname: <DOMAIN>
+
+           If the domain is a trusted domain, the sAMAccountName for
+           the group cannot be obtained through an LDAP query. Reconstruct
+           the groupname as originally received (DOMAIN\\GROUP) prior to
+           grp.getgrnam(). Determine whether this is trusted domain
+           by comparing with the value of "workgroup" in cifs_srv_workgroup.
+           This value (workgroup) is automatically detected and set when the
+           server initially joins an AD domain.
+        """
+
         external_domain = False
         if netbiosname:
-            joined_domain = self.basedn.split(',')[0].strip('DC=').upper()
+            with client as c:
+                smb = c.call('smb.config')
+            joined_domain = smb['workgroup'].upper()
             group_domain = netbiosname.upper()
             if joined_domain != group_domain:
                 external_domain = True
@@ -3316,10 +3338,12 @@
         self.basedn = self.get_baseDN()
         self.attributes = ['sAMAccountName']
 
-        # Redmine 63414
+        # Redmine 63414 and 76000
         external_domain = False
         if netbiosname:
-            joined_domain = self.basedn.split(',')[0].strip('DC=').upper()
+            with client as c:
+                smb = c.call('smb.config')
+            joined_domain = smb['workgroup'].upper()
             group_domain = netbiosname.upper()
             if joined_domain != group_domain:
                 external_domain = True
